class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> res;
        int n = nums.size();
        
        if(nums.empty())
            return res;
        
        sort(nums.begin(), nums.end());
        
        for(int i = 0; i<nums.size(); i++){
            for(int j = i+1; j<nums.size();j++){
                
                int left = j+1;
                int right = n-1;
                int target1 = target-(nums[i]+nums[j]);
                
                while(left<right){
                    int twosum = nums[left] + nums[right];
                    if(twosum < target1)
                        left++;
                    else if(twosum > target1)
                        right--;
                    else{
                        vector<int> q(4,0);
                        q[0] = nums[i];
                        q[1] = nums[j];
                        q[2] = nums[left];
                        q[3] = nums[right];
                        
                        res.push_back(q);
                        
                        while(left<right && nums[left] == q[2])
                            left++;
                        
                        while(left<right && nums[right] == q[3])
                            right--;
                    }
                }
                while(j+1 < n && nums[j+1] == nums[j])
                    j++;
            }
            while(i+1<n && nums[i+1] == nums[i])
                i++;
        }
        
        return res;
    }
};
