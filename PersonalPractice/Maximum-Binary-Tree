/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* buildtree(int l, int r, vector<int> &nums){
        if(l>r){
            return NULL;
        }
        
        int maxi = nums[l];
        int ind = l;
        
        for(int i = l; i<=r; i++){
            if(nums[i] > maxi){
                maxi = nums[i];
                ind = i;
            }
        }
        TreeNode* root = new TreeNode(nums[ind]);
        root->left = buildtree(l, ind - 1, nums);
        root->right = buildtree(ind + 1, r, nums);
        
        return root;
    }
    
    
    
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return buildtree(0, nums.size() - 1, nums);
    }
};
