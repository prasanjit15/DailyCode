#include <bits/stdc++.h> 
  
using namespace std; 
   
struct Item  { 
    int value;
    int weight; 
};

bool comparator(struct Item a, struct Item b){
    double r1 = (double)a.value/(double)a.weight;
    double r2 = (double)b.value/(double)b.weight;
    return (r1>r2);
}

int fractionalKnapsack(int w, Item arr[], int n){
    sort(arr, arr+n, comparator);

    int curr = 0;
    double final = 0;
    for(int i = 0; i<n; i++){
        if(curr + arr[i].weight <= w){
            curr += arr[i].weight;
            final += arr[i].value;
        }else{
            int rem = w - curr;
            final += arr[i].value * ((double)rem/(double)arr[i].weight);
        }
    }
    return final;
}

int main() { 
    int W = 50; 
    Item arr[] = { { 60, 10 }, { 100, 20 }, { 120, 30 } }; 
  
    int n = sizeof(arr) / sizeof(arr[0]); 
  
    cout << "Maximum value we can obtain = "<< fractionalKnapsack(W, arr, n)<<endl; 
    return 0; 
}
